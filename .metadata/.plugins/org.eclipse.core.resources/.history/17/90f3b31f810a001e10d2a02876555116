package mthodreferenceexample;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.function.Function;

public class MethodReferenceExample {

	public static void main(String[] args) {
	     ExecutorService executorService = Executors.newSingleThreadExecutor();
	     
	     //Runnable r1 = ()->System.out.println("my task is executing.......");
	     Runnable r1 = MethodReferenceExample::myRun; 
	     executorService.execute(r1);
	    List<Integer> numbers = new ArrayList<>();
	    numbers.add(4);
	    numbers.add(9);
	    numbers.add(36);
	    numbers.add(100);
	    numbers.forEach(System.out::println);
	    List<Double> squareRoots = MethodReferenceExample.findSquares(numbers,Double::new);
	}
	    private static void myRun() {
		System.out.println("My task is running......");
		
	}
	    private static List<Double> findSquares(List<Integer> numbers,Function<Integer,Double> f){
	    	List<Double> result = new ArrayList<Double>();
			return null;
	    	
	    }

}
